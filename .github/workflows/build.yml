name: Build and test
on: [push, workflow_dispatch]
jobs:
  build_and_test:
    strategy:
      matrix:
        compiler:
          - { os: ubuntu-22.04, bin: clang++-17 }
          - { os: ubuntu-22.04, bin: g++-12 }
          - { os: windows-2022, bin: cl.exe }

    runs-on: ${{ matrix.compiler.os }}
    env:
      BUILD_TYPE: Release
      CXX: ${{ matrix.compiler.bin }}
      SPDLOG_LEVEL: DEBUG
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'
        fetch-depth: '0'

    - uses: ilammy/msvc-dev-cmd@v1

    - name: Add LLVM apt repository
      if: runner.os == 'Linux'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository -y -S deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main

    - name: Apt install
      if: runner.os == 'Linux'
      run: sudo apt install -y ninja-build clang-17 g++-12

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -GNinja -DDISABLE_LTO=ON -DUSE_CLANG_TIDY=OFF -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Tests
      working-directory: ${{github.workspace}}/build
      run: ctest --output-on-failure --no-tests=error
